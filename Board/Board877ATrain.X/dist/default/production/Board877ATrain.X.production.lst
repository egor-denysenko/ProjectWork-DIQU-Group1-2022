

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 01 17:22:11 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174                           
   175                           	psect	idataBANK1
   176  0164                     __pidataBANK1:
   177                           
   178                           ;initializer for main@F880
   179  0164  3443               	retlw	67
   180  0165  3461               	retlw	97
   181  0166  346D               	retlw	109
   182  0167  3462               	retlw	98
   183  0168  3469               	retlw	105
   184  0169  346F               	retlw	111
   185  016A  3420               	retlw	32
   186  016B  3474               	retlw	116
   187  016C  3465               	retlw	101
   188  016D  346D               	retlw	109
   189  016E  3470               	retlw	112
   190  016F  3465               	retlw	101
   191  0170  3472               	retlw	114
   192  0171  3461               	retlw	97
   193  0172  3474               	retlw	116
   194  0173  3475               	retlw	117
   195  0174  3472               	retlw	114
   196  0175  3461               	retlw	97
   197  0176  3400               	retlw	0
   198  0177  3400               	retlw	0
   199  0178  3400               	retlw	0
   200  0179  3400               	retlw	0
   201  017A  3400               	retlw	0
   202  017B  3400               	retlw	0
   203  017C  3400               	retlw	0
   204  017D  3400               	retlw	0
   205  017E  3400               	retlw	0
   206  017F  3400               	retlw	0
   207  0180  3400               	retlw	0
   208  0181  3400               	retlw	0
   209  0182  3400               	retlw	0
   210  0183  3400               	retlw	0
   211  0019                     _TXREG	set	25
   212  0018                     _RCSTA	set	24
   213  000B                     _INTCON	set	11
   214  0005                     _PORTA	set	5
   215  001A                     _RCREG	set	26
   216  000C                     _PIR1	set	12
   217  0008                     _PORTD	set	8
   218  0006                     _PORTB	set	6
   219  0009                     _PORTE	set	9
   220  0065                     _RCIF	set	101
   221  0064                     _TXIF	set	100
   222  0099                     _SPBRG	set	153
   223  0098                     _TXSTA	set	152
   224  008C                     _PIE1	set	140
   225  0089                     _TRISE	set	137
   226  0088                     _TRISD	set	136
   227  0087                     _TRISC	set	135
   228  0086                     _TRISB	set	134
   229  0085                     _TRISA	set	133
   230                           
   231                           	psect	cinit
   232  000F                     start_initialization:	
   233                           ; #config settings
   234                           
   235  000F                     __initialization:
   236                           
   237                           ; Initialize objects allocated to BANK1
   238  000F  1383               	bcf	3,7	;select IRP bank0
   239  0010  30C0               	movlw	low (__pdataBANK1+32)
   240  0011  00FD               	movwf	btemp+-1
   241  0012  3001               	movlw	high __pidataBANK1
   242  0013  00FE               	movwf	btemp
   243  0014  3064               	movlw	low __pidataBANK1
   244  0015  00FF               	movwf	btemp+1
   245  0016  30A0               	movlw	low __pdataBANK1
   246  0017  0084               	movwf	4
   247  0018  120A  118A  21A2  120A  118A  	fcall	init_ram0
   248                           
   249                           ; Clear objects allocated to BANK0
   250  001D  01D3               	clrf	__pbssBANK0& (0+127)
   251  001E  01D4               	clrf	(__pbssBANK0+1)& (0+127)
   252  001F  01D5               	clrf	(__pbssBANK0+2)& (0+127)
   253  0020  01D6               	clrf	(__pbssBANK0+3)& (0+127)
   254  0021  01D7               	clrf	(__pbssBANK0+4)& (0+127)
   255  0022  01D8               	clrf	(__pbssBANK0+5)& (0+127)
   256  0023  01D9               	clrf	(__pbssBANK0+6)& (0+127)
   257  0024                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260  0024                     __end_of__initialization:
   261  0024  0183               	clrf	3
   262  0025  120A  118A  28C5   	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK0
   265  0053                     __pbssBANK0:
   266  0053                     _convInt:
   267  0053                     	ds	5
   268  0058                     _recievedData:
   269  0058                     	ds	1
   270  0059                     _received:
   271  0059                     	ds	1
   272                           
   273                           	psect	dataBANK1
   274  00A0                     __pdataBANK1:
   275  00A0                     main@F880:
   276  00A0                     	ds	32
   277                           
   278                           	psect	inittext
   279  019E                     init_fetch0:	
   280                           ;	Called with low address in FSR and high address in W
   281                           
   282  019E  087E               	movf	btemp,w
   283  019F  008A               	movwf	10
   284  01A0  087F               	movf	btemp+1,w
   285  01A1  0082               	movwf	2
   286  01A2                     init_ram0:	
   287                           ;Called with:
   288                           ;	high address of idata address in btemp 
   289                           ;	low address of idata address in btemp+1 
   290                           ;	low address of data in FSR
   291                           ;	high address + 1 of data in btemp-1
   292                           
   293  01A2  120A  118A  219E  120A  118A  	fcall	init_fetch0
   294  01A7  0080               	movwf	0
   295  01A8  0A84               	incf	4,f
   296  01A9  0804               	movf	4,w
   297  01AA  067D               	xorwf	btemp+-1,w
   298  01AB  1903               	btfsc	3,2
   299  01AC  3400               	retlw	0
   300  01AD  0AFF               	incf	btemp+1,f
   301  01AE  1903               	btfsc	3,2
   302  01AF  0AFE               	incf	btemp,f
   303  01B0  29A2               	goto	init_ram0
   304                           
   305                           	psect	cstackCOMMON
   306  0070                     __pcstackCOMMON:
   307  0070                     ?_init:
   308  0070                     ?_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_ISR:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ??_ISR:	
   315                           ; 1 bytes @ 0x0
   316                           
   317                           
   318                           ; 1 bytes @ 0x0
   319  0070                     	ds	3
   320  0073                     ??_init:
   321  0073                     ?___aldiv:	
   322                           ; 1 bytes @ 0x3
   323                           
   324  0073                     ___aldiv@divisor:	
   325                           ; 4 bytes @ 0x3
   326                           
   327                           
   328                           ; 4 bytes @ 0x3
   329  0073                     	ds	4
   330  0077                     ___aldiv@dividend:
   331                           
   332                           ; 4 bytes @ 0x7
   333  0077                     	ds	4
   334                           
   335                           	psect	cstackBANK0
   336  0020                     __pcstackBANK0:
   337  0020                     ??___aldiv:
   338                           
   339                           ; 1 bytes @ 0x0
   340  0020                     	ds	1
   341  0021                     ___aldiv@counter:
   342                           
   343                           ; 1 bytes @ 0x1
   344  0021                     	ds	1
   345  0022                     ___aldiv@sign:
   346                           
   347                           ; 1 bytes @ 0x2
   348  0022                     	ds	1
   349  0023                     ___aldiv@quotient:
   350                           
   351                           ; 4 bytes @ 0x3
   352  0023                     	ds	4
   353  0027                     ?_initSerial:
   354  0027                     initSerial@baudRate:	
   355                           ; 1 bytes @ 0x7
   356                           
   357                           
   358                           ; 4 bytes @ 0x7
   359  0027                     	ds	4
   360  002B                     ??_initSerial:
   361                           
   362                           ; 1 bytes @ 0xB
   363  002B                     	ds	4
   364  002F                     ??_main:
   365                           
   366                           ; 1 bytes @ 0xF
   367  002F                     	ds	4
   368  0033                     main@sendDataLCD:
   369                           
   370                           ; 32 bytes @ 0x13
   371  0033                     	ds	32
   372                           
   373                           	psect	maintext
   374  00C5                     __pmaintext:	
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 63 in file "BoardTC.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  sendDataLCD    32   19[BANK0 ] unsigned char [32]
   385 ;;  i               2    0        int 
   386 ;;  temperatura     1    0        unsigned char 
   387 ;;  codice          1    0        unsigned char 
   388 ;;  destinatario    1    0        unsigned char 
   389 ;;  mittente        1    0        unsigned char 
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : B00/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   399 ;;      Params:         0       0       0       0       0
   400 ;;      Locals:         0      32       0       0       0
   401 ;;      Temps:          0       4       0       0       0
   402 ;;      Totals:         0      36       0       0       0
   403 ;;Total ram usage:       36 bytes
   404 ;; Hardware stack levels required when called: 3
   405 ;; This function calls:
   406 ;;		_init
   407 ;;		_initSerial
   408 ;; This function is called by:
   409 ;;		Startup code after reset
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           
   414                           ;psect for function _main
   415  00C5                     _main:
   416  00C5                     l1039:	
   417                           ;incstack = 0
   418                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   419                           
   420                           
   421                           ;BoardTC.c: 64:     init();
   422  00C5  120A  118A  21B1  120A  118A  	fcall	_init
   423                           
   424                           ;BoardTC.c: 65:     initSerial(9600);
   425  00CA  3000               	movlw	0
   426  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   427  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   428  00CD  00AA               	movwf	initSerial@baudRate+3
   429  00CE  3000               	movlw	0
   430  00CF  00A9               	movwf	initSerial@baudRate+2
   431  00D0  3025               	movlw	37
   432  00D1  00A8               	movwf	initSerial@baudRate+1
   433  00D2  3080               	movlw	128
   434  00D3  00A7               	movwf	initSerial@baudRate
   435  00D4  120A  118A  2121  120A  118A  	fcall	_initSerial
   436  00D9                     l1041:
   437                           
   438                           ;BoardTC.c: 67:     PORTE = 0x00;
   439  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   440  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   441  00DB  0189               	clrf	9	;volatile
   442  00DC                     l1043:
   443                           
   444                           ;BoardTC.c: 68:     received = 0;
   445  00DC  01D9               	clrf	_received
   446  00DD                     l1045:
   447  00DD                     l1047:
   448  00DD                     l1049:
   449  00DD                     l1051:
   450  00DD                     l1053:
   451  00DD                     l1055:
   452                           
   453                           ;BoardTC.c: 75:     char sendDataLCD[32] = {'C', 'a', 'm', 'b', 'i', 'o', ' ', 't', 'e',
      +                           'm', 'p', 'e', 'r', 'a', 't', 'u', 'r', 'a', '\0'};
   454  00DD  3033               	movlw	main@sendDataLCD& (0+255)
   455  00DE  0084               	movwf	4
   456  00DF  30A0               	movlw	low main@F880
   457  00E0  00AF               	movwf	??_main
   458  00E1  0804               	movf	4,w
   459  00E2  00B0               	movwf	??_main+1
   460  00E3  3020               	movlw	32
   461  00E4  00B1               	movwf	??_main+2
   462  00E5                     u380:
   463  00E5  082F               	movf	??_main,w
   464  00E6  0084               	movwf	4
   465  00E7  1383               	bcf	3,7	;select IRP bank1
   466  00E8  0800               	movf	0,w
   467  00E9  00B2               	movwf	??_main+3
   468  00EA  0AAF               	incf	??_main,f
   469  00EB  0830               	movf	??_main+1,w
   470  00EC  0084               	movwf	4
   471  00ED  0832               	movf	??_main+3,w
   472  00EE  0080               	movwf	0
   473  00EF  0AB0               	incf	??_main+1,f
   474  00F0  0BB1               	decfsz	??_main+2,f
   475  00F1  28E5               	goto	u380
   476  00F2                     l1057:
   477                           
   478                           ;BoardTC.c: 78:     {;BoardTC.c: 83:         PORTB = 0x01;
   479  00F2  3001               	movlw	1
   480  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   481  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   482  00F5  0086               	movwf	6	;volatile
   483  00F6                     l1059:
   484                           
   485                           ;BoardTC.c: 84:         _delay((unsigned long)((500)*(8000000/4000.0)));
   486  00F6  3006               	movlw	6
   487  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   488  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   489  00F9  00B1               	movwf	??_main+2
   490  00FA  3013               	movlw	19
   491  00FB  00B0               	movwf	??_main+1
   492  00FC  30AD               	movlw	173
   493  00FD  00AF               	movwf	??_main
   494  00FE                     u617:
   495  00FE  0BAF               	decfsz	??_main,f
   496  00FF  28FE               	goto	u617
   497  0100  0BB0               	decfsz	??_main+1,f
   498  0101  28FE               	goto	u617
   499  0102  0BB1               	decfsz	??_main+2,f
   500  0103  28FE               	goto	u617
   501  0104                     l1061:
   502                           
   503                           ;BoardTC.c: 86:         if(received)
   504  0104  1283               	bcf	3,5	;RP0=0, select bank0
   505  0105  1303               	bcf	3,6	;RP1=0, select bank0
   506  0106  0859               	movf	_received,w
   507  0107  1903               	btfsc	3,2
   508  0108  290A               	goto	u391
   509  0109  290B               	goto	u390
   510  010A                     u391:
   511  010A  290E               	goto	l1067
   512  010B                     u390:
   513  010B                     l1063:
   514                           
   515                           ;BoardTC.c: 87:         {;BoardTC.c: 88:             received = 0;
   516  010B  01D9               	clrf	_received
   517  010C                     l1065:
   518                           
   519                           ;BoardTC.c: 89:             PORTD = recievedData;
   520  010C  0858               	movf	_recievedData,w
   521  010D  0088               	movwf	8	;volatile
   522  010E                     l1067:
   523                           
   524                           ;BoardTC.c: 92:         PORTB = 0x00;
   525  010E  0186               	clrf	6	;volatile
   526                           
   527                           ;BoardTC.c: 93:         _delay((unsigned long)((500)*(8000000/4000.0)));
   528  010F  3006               	movlw	6
   529  0110  1283               	bcf	3,5	;RP0=0, select bank0
   530  0111  1303               	bcf	3,6	;RP1=0, select bank0
   531  0112  00B1               	movwf	??_main+2
   532  0113  3013               	movlw	19
   533  0114  00B0               	movwf	??_main+1
   534  0115  30AD               	movlw	173
   535  0116  00AF               	movwf	??_main
   536  0117                     u627:
   537  0117  0BAF               	decfsz	??_main,f
   538  0118  2917               	goto	u627
   539  0119  0BB0               	decfsz	??_main+1,f
   540  011A  2917               	goto	u627
   541  011B  0BB1               	decfsz	??_main+2,f
   542  011C  2917               	goto	u627
   543  011D  28F2               	goto	l1057
   544  011E  120A  118A  280C   	ljmp	start
   545  0121                     __end_of_main:
   546                           
   547                           	psect	text1
   548  0121                     __ptext1:	
   549 ;; *************** function _initSerial *****************
   550 ;; Defined at:
   551 ;;		line 143 in file "BoardTC.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  baudRate        4    7[BANK0 ] unsigned long 
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, pclath, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       4       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       4       0       0       0
   568 ;;      Totals:         0       8       0       0       0
   569 ;;Total ram usage:        8 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; Hardware stack levels required when called: 2
   572 ;; This function calls:
   573 ;;		___aldiv
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function _initSerial
   581  0121                     _initSerial:
   582  0121                     l1021:	
   583                           ;incstack = 0
   584                           ; Regs used in _initSerial: [wreg+status,2+status,0+pclath+cstack]
   585                           
   586                           
   587                           ;BoardTC.c: 143: void initSerial(unsigned long int baudRate);BoardTC.c: 144: {;BoardTC.c
      +                          : 145:  TRISC &= ~0x40;
   588  0121  30BF               	movlw	191
   589  0122  1283               	bcf	3,5	;RP0=0, select bank0
   590  0123  1303               	bcf	3,6	;RP1=0, select bank0
   591  0124  00AB               	movwf	??_initSerial
   592  0125  082B               	movf	??_initSerial,w
   593  0126  1683               	bsf	3,5	;RP0=1, select bank1
   594  0127  1303               	bcf	3,6	;RP1=0, select bank1
   595  0128  0587               	andwf	7,f	;volatile
   596  0129                     l1023:
   597                           
   598                           ;BoardTC.c: 146:  TRISC |= 0x80;
   599  0129  1787               	bsf	7,7	;volatile
   600  012A                     l1025:
   601                           
   602                           ;BoardTC.c: 147:  TXSTA = 0x20;
   603  012A  3020               	movlw	32
   604  012B  0098               	movwf	24	;volatile
   605  012C                     l1027:
   606                           
   607                           ;BoardTC.c: 149:  RCSTA = 0x90;
   608  012C  3090               	movlw	144
   609  012D  1283               	bcf	3,5	;RP0=0, select bank0
   610  012E  1303               	bcf	3,6	;RP1=0, select bank0
   611  012F  0098               	movwf	24	;volatile
   612  0130                     l1029:
   613                           
   614                           ;BoardTC.c: 151:  INTCON |= 0x80;
   615  0130  178B               	bsf	11,7	;volatile
   616  0131                     l1031:
   617                           
   618                           ;BoardTC.c: 152:  INTCON |= 0x40;
   619  0131  170B               	bsf	11,6	;volatile
   620  0132                     l1033:
   621                           
   622                           ;BoardTC.c: 153:  PIE1 |= 0x20;
   623  0132  1683               	bsf	3,5	;RP0=1, select bank1
   624  0133  1303               	bcf	3,6	;RP1=0, select bank1
   625  0134  168C               	bsf	12,5	;volatile
   626  0135                     l1035:
   627                           
   628                           ;BoardTC.c: 155:  received = 0;
   629  0135  1283               	bcf	3,5	;RP0=0, select bank0
   630  0136  1303               	bcf	3,6	;RP1=0, select bank0
   631  0137  01D9               	clrf	_received
   632  0138                     l1037:
   633                           
   634                           ;BoardTC.c: 157:  SPBRG =(8000000 / (long) (64UL*baudRate)) - 1;
   635  0138  0827               	movf	initSerial@baudRate,w
   636  0139  00AB               	movwf	??_initSerial
   637  013A  0828               	movf	initSerial@baudRate+1,w
   638  013B  00AC               	movwf	??_initSerial+1
   639  013C  0829               	movf	initSerial@baudRate+2,w
   640  013D  00AD               	movwf	??_initSerial+2
   641  013E  082A               	movf	initSerial@baudRate+3,w
   642  013F  00AE               	movwf	??_initSerial+3
   643  0140  3006               	movlw	6
   644  0141                     u375:
   645  0141  1003               	clrc
   646  0142  0DAB               	rlf	??_initSerial,f
   647  0143  0DAC               	rlf	??_initSerial+1,f
   648  0144  0DAD               	rlf	??_initSerial+2,f
   649  0145  0DAE               	rlf	??_initSerial+3,f
   650  0146                     u370:
   651  0146  3EFF               	addlw	-1
   652  0147  1D03               	skipz
   653  0148  2941               	goto	u375
   654  0149  082E               	movf	??_initSerial+3,w
   655  014A  00F6               	movwf	___aldiv@divisor+3
   656  014B  082D               	movf	??_initSerial+2,w
   657  014C  00F5               	movwf	___aldiv@divisor+2
   658  014D  082C               	movf	??_initSerial+1,w
   659  014E  00F4               	movwf	___aldiv@divisor+1
   660  014F  082B               	movf	??_initSerial,w
   661  0150  00F3               	movwf	___aldiv@divisor
   662  0151  3000               	movlw	0
   663  0152  00FA               	movwf	___aldiv@dividend+3
   664  0153  307A               	movlw	122
   665  0154  00F9               	movwf	___aldiv@dividend+2
   666  0155  3012               	movlw	18
   667  0156  00F8               	movwf	___aldiv@dividend+1
   668  0157  3000               	movlw	0
   669  0158  00F7               	movwf	___aldiv@dividend
   670  0159  120A  118A  2028  120A  118A  	fcall	___aldiv
   671  015E  0873               	movf	?___aldiv,w
   672  015F  3EFF               	addlw	255
   673  0160  1683               	bsf	3,5	;RP0=1, select bank1
   674  0161  1303               	bcf	3,6	;RP1=0, select bank1
   675  0162  0099               	movwf	25	;volatile
   676  0163                     l76:
   677  0163  0008               	return
   678  0164                     __end_of_initSerial:
   679                           
   680                           	psect	text2
   681  0028                     __ptext2:	
   682 ;; *************** function ___aldiv *****************
   683 ;; Defined at:
   684 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  divisor         4    3[COMMON] long 
   687 ;;  dividend        4    7[COMMON] long 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  quotient        4    3[BANK0 ] long 
   690 ;;  sign            1    2[BANK0 ] unsigned char 
   691 ;;  counter         1    1[BANK0 ] unsigned char 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  4    3[COMMON] long 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         8       0       0       0       0
   702 ;;      Locals:         0       6       0       0       0
   703 ;;      Temps:          0       1       0       0       0
   704 ;;      Totals:         8       7       0       0       0
   705 ;;Total ram usage:       15 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_initSerial
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function ___aldiv
   717  0028                     ___aldiv:
   718  0028                     l973:	
   719                           ;incstack = 0
   720                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   721                           
   722  0028  1283               	bcf	3,5	;RP0=0, select bank0
   723  0029  1303               	bcf	3,6	;RP1=0, select bank0
   724  002A  01A2               	clrf	___aldiv@sign
   725  002B                     l975:
   726  002B  1FF6               	btfss	___aldiv@divisor+3,7
   727  002C  282E               	goto	u271
   728  002D  282F               	goto	u270
   729  002E                     u271:
   730  002E  283C               	goto	l286
   731  002F                     u270:
   732  002F                     l977:
   733  002F  09F3               	comf	___aldiv@divisor,f
   734  0030  09F4               	comf	___aldiv@divisor+1,f
   735  0031  09F5               	comf	___aldiv@divisor+2,f
   736  0032  09F6               	comf	___aldiv@divisor+3,f
   737  0033  0AF3               	incf	___aldiv@divisor,f
   738  0034  1903               	skipnz
   739  0035  0AF4               	incf	___aldiv@divisor+1,f
   740  0036  1903               	skipnz
   741  0037  0AF5               	incf	___aldiv@divisor+2,f
   742  0038  1903               	skipnz
   743  0039  0AF6               	incf	___aldiv@divisor+3,f
   744  003A  01A2               	clrf	___aldiv@sign
   745  003B  0AA2               	incf	___aldiv@sign,f
   746  003C                     l286:
   747  003C  1FFA               	btfss	___aldiv@dividend+3,7
   748  003D  283F               	goto	u281
   749  003E  2840               	goto	u280
   750  003F                     u281:
   751  003F  284F               	goto	l983
   752  0040                     u280:
   753  0040                     l979:
   754  0040  09F7               	comf	___aldiv@dividend,f
   755  0041  09F8               	comf	___aldiv@dividend+1,f
   756  0042  09F9               	comf	___aldiv@dividend+2,f
   757  0043  09FA               	comf	___aldiv@dividend+3,f
   758  0044  0AF7               	incf	___aldiv@dividend,f
   759  0045  1903               	skipnz
   760  0046  0AF8               	incf	___aldiv@dividend+1,f
   761  0047  1903               	skipnz
   762  0048  0AF9               	incf	___aldiv@dividend+2,f
   763  0049  1903               	skipnz
   764  004A  0AFA               	incf	___aldiv@dividend+3,f
   765  004B                     l981:
   766  004B  3001               	movlw	1
   767  004C  00A0               	movwf	??___aldiv
   768  004D  0820               	movf	??___aldiv,w
   769  004E  06A2               	xorwf	___aldiv@sign,f
   770  004F                     l983:
   771  004F  3000               	movlw	0
   772  0050  00A6               	movwf	___aldiv@quotient+3
   773  0051  3000               	movlw	0
   774  0052  00A5               	movwf	___aldiv@quotient+2
   775  0053  3000               	movlw	0
   776  0054  00A4               	movwf	___aldiv@quotient+1
   777  0055  3000               	movlw	0
   778  0056  00A3               	movwf	___aldiv@quotient
   779  0057                     l985:
   780  0057  0876               	movf	___aldiv@divisor+3,w
   781  0058  0475               	iorwf	___aldiv@divisor+2,w
   782  0059  0474               	iorwf	___aldiv@divisor+1,w
   783  005A  0473               	iorwf	___aldiv@divisor,w
   784  005B  1903               	skipnz
   785  005C  285E               	goto	u291
   786  005D  285F               	goto	u290
   787  005E                     u291:
   788  005E  28AC               	goto	l1005
   789  005F                     u290:
   790  005F                     l987:
   791  005F  01A1               	clrf	___aldiv@counter
   792  0060  0AA1               	incf	___aldiv@counter,f
   793  0061  286F               	goto	l991
   794  0062                     l989:
   795  0062  3001               	movlw	1
   796  0063  00A0               	movwf	??___aldiv
   797  0064                     u305:
   798  0064  1003               	clrc
   799  0065  0DF3               	rlf	___aldiv@divisor,f
   800  0066  0DF4               	rlf	___aldiv@divisor+1,f
   801  0067  0DF5               	rlf	___aldiv@divisor+2,f
   802  0068  0DF6               	rlf	___aldiv@divisor+3,f
   803  0069  0BA0               	decfsz	??___aldiv,f
   804  006A  2864               	goto	u305
   805  006B  3001               	movlw	1
   806  006C  00A0               	movwf	??___aldiv
   807  006D  0820               	movf	??___aldiv,w
   808  006E  07A1               	addwf	___aldiv@counter,f
   809  006F                     l991:
   810  006F  1FF6               	btfss	___aldiv@divisor+3,7
   811  0070  2872               	goto	u311
   812  0071  2873               	goto	u310
   813  0072                     u311:
   814  0072  2862               	goto	l989
   815  0073                     u310:
   816  0073                     l993:
   817  0073  3001               	movlw	1
   818  0074  00A0               	movwf	??___aldiv
   819  0075                     u325:
   820  0075  1003               	clrc
   821  0076  0DA3               	rlf	___aldiv@quotient,f
   822  0077  0DA4               	rlf	___aldiv@quotient+1,f
   823  0078  0DA5               	rlf	___aldiv@quotient+2,f
   824  0079  0DA6               	rlf	___aldiv@quotient+3,f
   825  007A  0BA0               	decfsz	??___aldiv,f
   826  007B  2875               	goto	u325
   827  007C                     l995:
   828  007C  0876               	movf	___aldiv@divisor+3,w
   829  007D  027A               	subwf	___aldiv@dividend+3,w
   830  007E  1D03               	skipz
   831  007F  288A               	goto	u335
   832  0080  0875               	movf	___aldiv@divisor+2,w
   833  0081  0279               	subwf	___aldiv@dividend+2,w
   834  0082  1D03               	skipz
   835  0083  288A               	goto	u335
   836  0084  0874               	movf	___aldiv@divisor+1,w
   837  0085  0278               	subwf	___aldiv@dividend+1,w
   838  0086  1D03               	skipz
   839  0087  288A               	goto	u335
   840  0088  0873               	movf	___aldiv@divisor,w
   841  0089  0277               	subwf	___aldiv@dividend,w
   842  008A                     u335:
   843  008A  1C03               	skipc
   844  008B  288D               	goto	u331
   845  008C  288E               	goto	u330
   846  008D                     u331:
   847  008D  289D               	goto	l1001
   848  008E                     u330:
   849  008E                     l997:
   850  008E  0873               	movf	___aldiv@divisor,w
   851  008F  02F7               	subwf	___aldiv@dividend,f
   852  0090  0874               	movf	___aldiv@divisor+1,w
   853  0091  1C03               	skipc
   854  0092  0F74               	incfsz	___aldiv@divisor+1,w
   855  0093  02F8               	subwf	___aldiv@dividend+1,f
   856  0094  0875               	movf	___aldiv@divisor+2,w
   857  0095  1C03               	skipc
   858  0096  0F75               	incfsz	___aldiv@divisor+2,w
   859  0097  02F9               	subwf	___aldiv@dividend+2,f
   860  0098  0876               	movf	___aldiv@divisor+3,w
   861  0099  1C03               	skipc
   862  009A  0F76               	incfsz	___aldiv@divisor+3,w
   863  009B  02FA               	subwf	___aldiv@dividend+3,f
   864  009C                     l999:
   865  009C  1423               	bsf	___aldiv@quotient,0
   866  009D                     l1001:
   867  009D  3001               	movlw	1
   868  009E                     u345:
   869  009E  1003               	clrc
   870  009F  0CF6               	rrf	___aldiv@divisor+3,f
   871  00A0  0CF5               	rrf	___aldiv@divisor+2,f
   872  00A1  0CF4               	rrf	___aldiv@divisor+1,f
   873  00A2  0CF3               	rrf	___aldiv@divisor,f
   874  00A3  3EFF               	addlw	-1
   875  00A4  1D03               	skipz
   876  00A5  289E               	goto	u345
   877  00A6                     l1003:
   878  00A6  3001               	movlw	1
   879  00A7  02A1               	subwf	___aldiv@counter,f
   880  00A8  1D03               	btfss	3,2
   881  00A9  28AB               	goto	u351
   882  00AA  28AC               	goto	u350
   883  00AB                     u351:
   884  00AB  2873               	goto	l993
   885  00AC                     u350:
   886  00AC                     l1005:
   887  00AC  0822               	movf	___aldiv@sign,w
   888  00AD  1903               	btfsc	3,2
   889  00AE  28B0               	goto	u361
   890  00AF  28B1               	goto	u360
   891  00B0                     u361:
   892  00B0  28BC               	goto	l1009
   893  00B1                     u360:
   894  00B1                     l1007:
   895  00B1  09A3               	comf	___aldiv@quotient,f
   896  00B2  09A4               	comf	___aldiv@quotient+1,f
   897  00B3  09A5               	comf	___aldiv@quotient+2,f
   898  00B4  09A6               	comf	___aldiv@quotient+3,f
   899  00B5  0AA3               	incf	___aldiv@quotient,f
   900  00B6  1903               	skipnz
   901  00B7  0AA4               	incf	___aldiv@quotient+1,f
   902  00B8  1903               	skipnz
   903  00B9  0AA5               	incf	___aldiv@quotient+2,f
   904  00BA  1903               	skipnz
   905  00BB  0AA6               	incf	___aldiv@quotient+3,f
   906  00BC                     l1009:
   907  00BC  0826               	movf	___aldiv@quotient+3,w
   908  00BD  00F6               	movwf	?___aldiv+3
   909  00BE  0825               	movf	___aldiv@quotient+2,w
   910  00BF  00F5               	movwf	?___aldiv+2
   911  00C0  0824               	movf	___aldiv@quotient+1,w
   912  00C1  00F4               	movwf	?___aldiv+1
   913  00C2  0823               	movf	___aldiv@quotient,w
   914  00C3  00F3               	movwf	?___aldiv
   915  00C4                     l296:
   916  00C4  0008               	return
   917  00C5                     __end_of___aldiv:
   918                           
   919                           	psect	text3
   920  01B1                     __ptext3:	
   921 ;; *************** function _init *****************
   922 ;; Defined at:
   923 ;;		line 129 in file "BoardTC.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           
   952                           ;psect for function _init
   953  01B1                     _init:
   954  01B1                     l1013:	
   955                           ;incstack = 0
   956                           ; Regs used in _init: [wreg+status,2]
   957                           
   958                           
   959                           ;BoardTC.c: 131:     TRISA |= 0x01;
   960  01B1  1683               	bsf	3,5	;RP0=1, select bank1
   961  01B2  1303               	bcf	3,6	;RP1=0, select bank1
   962  01B3  1405               	bsf	5,0	;volatile
   963  01B4                     l1015:
   964                           
   965                           ;BoardTC.c: 132:     TRISB = 0x00;
   966  01B4  0186               	clrf	6	;volatile
   967                           
   968                           ;BoardTC.c: 133:     TRISC = 0x00;
   969  01B5  0187               	clrf	7	;volatile
   970                           
   971                           ;BoardTC.c: 134:     TRISD = 0x00;
   972  01B6  0188               	clrf	8	;volatile
   973                           
   974                           ;BoardTC.c: 135:     TRISE = 0x00;
   975  01B7  0189               	clrf	9	;volatile
   976  01B8                     l1017:
   977                           
   978                           ;BoardTC.c: 136:     PORTA = 0x20;
   979  01B8  3020               	movlw	32
   980  01B9  1283               	bcf	3,5	;RP0=0, select bank0
   981  01BA  1303               	bcf	3,6	;RP1=0, select bank0
   982  01BB  0085               	movwf	5	;volatile
   983  01BC                     l1019:
   984                           
   985                           ;BoardTC.c: 137:     PORTD = 0;
   986  01BC  0188               	clrf	8	;volatile
   987                           
   988                           ;BoardTC.c: 138:     INTCON = 0xC0;
   989  01BD  30C0               	movlw	192
   990  01BE  008B               	movwf	11	;volatile
   991                           
   992                           ;BoardTC.c: 139:     PIE1 = 0x60;
   993  01BF  3060               	movlw	96
   994  01C0  1683               	bsf	3,5	;RP0=1, select bank1
   995  01C1  1303               	bcf	3,6	;RP1=0, select bank1
   996  01C2  008C               	movwf	12	;volatile
   997  01C3                     l73:
   998  01C3  0008               	return
   999  01C4                     __end_of_init:
  1000                           
  1001                           	psect	text4
  1002  0184                     __ptext4:	
  1003 ;; *************** function _ISR *****************
  1004 ;; Defined at:
  1005 ;;		line 112 in file "BoardTC.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0
  1021 ;;      Temps:          3       0       0       0       0
  1022 ;;      Totals:         3       0       0       0       0
  1023 ;;Total ram usage:        3 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		Interrupt level 1
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _ISR
  1034  0184                     _ISR:
  1035  0184                     i1l1069:
  1036                           
  1037                           ;BoardTC.c: 115:     if(PIR1 & 0x20)
  1038  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0185  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0186  1E8C               	btfss	12,5	;volatile
  1041  0187  2989               	goto	u40_21
  1042  0188  298A               	goto	u40_20
  1043  0189                     u40_21:
  1044  0189  2992               	goto	i1l1075
  1045  018A                     u40_20:
  1046  018A                     i1l1071:
  1047                           
  1048                           ;BoardTC.c: 116:     {;BoardTC.c: 117:         recievedData = RCREG;
  1049  018A  081A               	movf	26,w	;volatile
  1050  018B  00F0               	movwf	??_ISR
  1051  018C  0870               	movf	??_ISR,w
  1052  018D  00D8               	movwf	_recievedData
  1053                           
  1054                           ;BoardTC.c: 118:         PORTD = 1;
  1055  018E  3001               	movlw	1
  1056  018F  0088               	movwf	8	;volatile
  1057  0190                     i1l1073:
  1058                           
  1059                           ;BoardTC.c: 119:         received = 1;
  1060  0190  01D9               	clrf	_received
  1061  0191  0AD9               	incf	_received,f
  1062  0192                     i1l1075:
  1063                           
  1064                           ;BoardTC.c: 122:     if(TXIF)
  1065  0192  1E0C               	btfss	12,4	;volatile
  1066  0193  2995               	goto	u41_21
  1067  0194  2996               	goto	u41_20
  1068  0195                     u41_21:
  1069  0195  2997               	goto	i1l70
  1070  0196                     u41_20:
  1071  0196                     i1l1077:
  1072                           
  1073                           ;BoardTC.c: 123:     {;BoardTC.c: 124:         TXIF = 0;
  1074  0196  120C               	bcf	12,4	;volatile
  1075  0197                     i1l70:
  1076  0197  0872               	movf	??_ISR+2,w
  1077  0198  008A               	movwf	10
  1078  0199  0E71               	swapf	??_ISR+1,w
  1079  019A  0083               	movwf	3
  1080  019B  0EFE               	swapf	btemp,f
  1081  019C  0E7E               	swapf	btemp,w
  1082  019D  0009               	retfie
  1083  019E                     __end_of_ISR:
  1084  007E                     btemp	set	126	;btemp
  1085  007E                     wtemp0	set	126
  1086                           
  1087                           	psect	intentry
  1088  0004                     __pintentry:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _ISR: [wreg]
  1091                           
  1092  0004                     interrupt_function:
  1093  007E                     saved_w	set	btemp
  1094  0004  00FE               	movwf	btemp
  1095  0005  0E03               	swapf	3,w
  1096  0006  00F1               	movwf	??_ISR+1
  1097  0007  080A               	movf	10,w
  1098  0008  00F2               	movwf	??_ISR+2
  1099  0009  120A  118A  2984   	ljmp	_ISR
  1100                           
  1101                           	psect	config
  1102                           
  1103                           ;Config register CONFIG @ 0x2007
  1104                           ;	Oscillator Selection bits
  1105                           ;	FOSC = HS, HS oscillator
  1106                           ;	Watchdog Timer Enable bit
  1107                           ;	WDTE = OFF, WDT disabled
  1108                           ;	Power-up Timer Enable bit
  1109                           ;	PWRTE = ON, PWRT enabled
  1110                           ;	Brown-out Reset Enable bit
  1111                           ;	BOREN = ON, BOR enabled
  1112                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1113                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1114                           ;	Data EEPROM Memory Code Protection bit
  1115                           ;	CPD = OFF, Data EEPROM code protection off
  1116                           ;	Flash Program Memory Write Enable bits
  1117                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1118                           ;	In-Circuit Debugger Mode bit
  1119                           ;	DEBUG = 0x1, unprogrammed default
  1120                           ;	Flash Program Memory Code Protection bit
  1121                           ;	CP = OFF, Code protection off
  1122  2007                     	org	8199
  1123  2007  3FF2               	dw	16370

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     51      58
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _initSerial->___aldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_initSerial
    _initSerial->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0     556
                                             15 BANK0     36    36      0
                               _init
                         _initSerial
 ---------------------------------------------------------------------------------
 (1) _initSerial                                           8     4      4     550
                                              7 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _initSerial
     ___aldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      20       7       40.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     33      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      65      12        0.0%
ABS                  0      0      65       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 01 17:22:11 2022

                      pc 0002                       l73 01C3                       l76 0163  
                     fsr 0004                      l286 003C                      l296 00C4  
                    l981 004B                      l973 0028                      l991 006F  
                    l983 004F                      l975 002B                      l993 0073  
                    l985 0057                      l977 002F                      l995 007C  
                    l987 005F                      l979 0040                      l997 008E  
                    l989 0062                      l999 009C                      u310 0073  
                    u311 0072                      u305 0064                      u330 008E  
                    u331 008D                      u325 0075                      u350 00AC  
                    u270 002F                      u351 00AB                      u335 008A  
                    u271 002E                      u360 00B1                      u280 0040  
                    u361 00B0                      u345 009E                      u281 003F  
                    u290 005F                      u370 0146                      u291 005E  
                    u380 00E5                      _ISR 0184                      u390 010B  
                    u375 0141                      u391 010A                      u617 00FE  
                    u627 0117                      fsr0 0004                      indf 0000  
                   ?_ISR 0070                     l1001 009D                     l1003 00A6  
                   l1013 01B1                     l1005 00AC                     l1021 0121  
                   l1015 01B4                     l1007 00B1                     l1031 0131  
                   l1023 0129                     l1017 01B8                     l1009 00BC  
                   l1033 0132                     l1025 012A                     l1041 00D9  
                   l1019 01BC                     l1035 0135                     l1027 012C  
                   l1051 00DD                     l1043 00DC                     l1037 0138  
                   l1029 0130                     l1061 0104                     l1053 00DD  
                   l1045 00DD                     l1063 010B                     l1055 00DD  
                   l1047 00DD                     l1039 00C5                     l1065 010C  
                   l1057 00F2                     l1049 00DD                     l1067 010E  
                   l1059 00F6                     _PIE1 008C                     _RCIF 0065  
                   i1l70 0197                     _PIR1 000C                     _TXIF 0064  
                   _main 00C5                     _init 01B1                     btemp 007E  
                   start 000C                    ??_ISR 0070          __end_of___aldiv 00C5  
                  ?_main 0070                    ?_init 0070                    _RCREG 001A  
                  _RCSTA 0018                    u40_20 018A                    u40_21 0189  
                  u41_20 0196                    u41_21 0195                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019                    _TXSTA 0098                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0121             __end_of_init 01C4                   ??_main 002F  
                 ??_init 0073                   i1l1071 018A                   i1l1073 0190  
                 i1l1075 0192                   i1l1077 0196                   i1l1069 0184  
                 _INTCON 000B                ??___aldiv 0020                   saved_w 007E  
__end_of__initialization 0024           __pcstackCOMMON 0070             __pidataBANK1 0164  
             __pbssBANK0 0053               __pmaintext 00C5               __pintentry 0004  
                ___aldiv 0028               _initSerial 0121                  __ptext1 0121  
                __ptext2 0028                  __ptext3 01B1                  __ptext4 0184  
                _convInt 0053             __size_of_ISR 001A         ___aldiv@dividend 0077  
   end_of_initialization 0024         ___aldiv@quotient 0023              ?_initSerial 0027  
    start_initialization 000F              __end_of_ISR 019E               init_fetch0 019E  
            __pdataBANK1 00A0       initSerial@baudRate 0027                ___latbits 0002  
          __pcstackBANK0 0020      __size_of_initSerial 0043                 ?___aldiv 0073  
        ___aldiv@divisor 0073        interrupt_function 0004          ___aldiv@counter 0021  
           _recievedData 0058          main@sendDataLCD 0033             ??_initSerial 002B  
       __size_of___aldiv 009D       __end_of_initSerial 0164            __size_of_main 005C  
          __size_of_init 0013                 _received 0059                 main@F880 00A0  
               init_ram0 01A2                 intlevel1 0000             ___aldiv@sign 0022  
