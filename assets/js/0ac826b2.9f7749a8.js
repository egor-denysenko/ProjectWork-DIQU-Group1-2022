"use strict";(self.webpackChunktrainly_docs=self.webpackChunktrainly_docs||[]).push([[209],{9613:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return f}});var n=r(9496);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=l(r),f=o,m=s["".concat(u,".").concat(f)]||s[f]||p[f]||a;return r?n.createElement(m,c(c({ref:t},d),{},{components:r})):n.createElement(m,c({ref:t},d))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=s;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},7683:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var n=r(2848),o=r(9213),a=(r(9496),r(9613)),c=["components"],i={id:"Project_Cloud",title:"Cloud"},u=void 0,l={unversionedId:"Project/Project_Cloud",id:"Project/Project_Cloud",title:"Cloud",description:"Receiving data",source:"@site/docs/Project/Cloud.md",sourceDirName:"Project",slug:"/Project/Project_Cloud",permalink:"/ProjectWork-DIQU-Group1-2022/docs/Project/Project_Cloud",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Project/Cloud.md",tags:[],version:"current",frontMatter:{id:"Project_Cloud",title:"Cloud"},sidebar:"tutorialSidebar",previous:{title:"Gateway",permalink:"/ProjectWork-DIQU-Group1-2022/docs/Project/Project_Gateway"},next:{title:"Monitoring",permalink:"/ProjectWork-DIQU-Group1-2022/docs/Project/Project_Monitoring"}},d={},p=[{value:"Receiving data",id:"receiving-data",level:2},{value:"Data management",id:"data-management",level:2},{value:"Gallery",id:"gallery",level:2}],s={toc:p};function f(e){var t=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"receiving-data"},"Receiving data"),(0,a.kt)("p",null,"Cloud receive data from raspberry py with MQTT protocol. "),(0,a.kt)("h2",{id:"data-management"},"Data management"),(0,a.kt)("p",null,"The node.js application receives the data and sends it to InfluxDB to storage it in the database."),(0,a.kt)("h2",{id:"gallery"},"Gallery"))}f.isMDXComponent=!0}}]);